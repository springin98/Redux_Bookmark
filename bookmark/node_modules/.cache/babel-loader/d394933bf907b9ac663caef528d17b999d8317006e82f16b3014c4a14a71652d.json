{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NTX550\\\\Desktop\\\\ASAC_B\\\\ASAC_B\\\\bookmark\\\\src\\\\components\\\\Content.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Content = props => {\n  _s();\n  const [bookmarkBoolean, setBookmarkBoolean] = useState(false);\n  const bookmarkClick = () => {\n    console.log(\"id : \" + props.id + \"=> boolean : \" + bookmarkBoolean);\n    if (bookmarkBoolean === false) {\n      props.onBookmarkTrue(props.id);\n    } else {\n      props.onBookmarkFalse(props.id);\n    }\n    changeColor();\n  };\n  //bookmarkBoolean 값을 확인하고, false이면 모듈 리듀서 함수 onBookmakrTrue를 실행한다.\n  //onBookmarkTrue는 현재 id 값을 받고, trueIDArr에 id 를 추가한다.\n  //true이면 onBookmarkFalse를 실행한다.\n\n  const bookmarkColor = useRef(null);\n  const changeColor = () => {\n    if (bookmarkBoolean === true) {\n      bookmarkColor.current.style.color = \"blue\";\n    } else {\n      bookmarkColor.current.style.color = \"red\";\n    }\n  };\n\n  // useEffect(() => {\n  //   console.log(props.trueIDArr.includes(props.id));\n  //   setBookmarkBoolean(props.trueIDArr.includes(props.id));\n  //   changeColor();\n  // });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"\\uCEE8\\uD150\\uCE20 id : \", props.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"\\uCEE8\\uD150\\uCE20 title : \", props.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => bookmarkClick(),\n      children: \"\\uBD81\\uB9C8\\uD06C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \" | \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      ref: bookmarkColor,\n      children: \"\\uBD81\\uB9C8\\uD06C \\uC720\\uBB34\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n  //북마크 버튼을 클릭하면 bookmakrClick 함수를 즉시 실행한다.\n};\n_s(Content, \"sZt/MxOA6DLHBy6GIZDu2lnGkwU=\");\n_c = Content;\nexport default Content;\nvar _c;\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"names":["useEffect","useRef","useState","Content","props","bookmarkBoolean","setBookmarkBoolean","bookmarkClick","console","log","id","onBookmarkTrue","onBookmarkFalse","changeColor","bookmarkColor","current","style","color","title"],"sources":["C:/Users/NTX550/Desktop/ASAC_B/ASAC_B/bookmark/src/components/Content.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\n\r\nconst Content = (props) => {\r\n  const [bookmarkBoolean, setBookmarkBoolean] = useState(false);\r\n\r\n  const bookmarkClick = () => {\r\n    console.log(\"id : \" + props.id + \"=> boolean : \" + bookmarkBoolean);\r\n    if (bookmarkBoolean === false) {\r\n      props.onBookmarkTrue(props.id);\r\n    } else {\r\n      props.onBookmarkFalse(props.id);\r\n    }\r\n    changeColor();\r\n  };\r\n  //bookmarkBoolean 값을 확인하고, false이면 모듈 리듀서 함수 onBookmakrTrue를 실행한다.\r\n  //onBookmarkTrue는 현재 id 값을 받고, trueIDArr에 id 를 추가한다.\r\n  //true이면 onBookmarkFalse를 실행한다.\r\n\r\n  const bookmarkColor = useRef(null);\r\n  const changeColor = () => {\r\n    if (bookmarkBoolean === true) {\r\n      bookmarkColor.current.style.color = \"blue\";\r\n    } else {\r\n      bookmarkColor.current.style.color = \"red\";\r\n    }\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   console.log(props.trueIDArr.includes(props.id));\r\n  //   setBookmarkBoolean(props.trueIDArr.includes(props.id));\r\n  //   changeColor();\r\n  // });\r\n\r\n  return (\r\n    <div>\r\n      <span>컨텐츠 id : {props.id}</span>\r\n      <span>컨텐츠 title : {props.title}</span>\r\n      <button onClick={() => bookmarkClick()}>북마크</button>\r\n      <span> | </span>\r\n      <span ref={bookmarkColor}>북마크 유무</span>\r\n    </div>\r\n  );\r\n  //북마크 버튼을 클릭하면 bookmakrClick 함수를 즉시 실행한다.\r\n};\r\n\r\nexport default Content;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAEpD,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAAA;EACzB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMK,aAAa,GAAG,MAAM;IAC1BC,OAAO,CAACC,GAAG,CAAC,OAAO,GAAGL,KAAK,CAACM,EAAE,GAAG,eAAe,GAAGL,eAAe,CAAC;IACnE,IAAIA,eAAe,KAAK,KAAK,EAAE;MAC7BD,KAAK,CAACO,cAAc,CAACP,KAAK,CAACM,EAAE,CAAC;IAChC,CAAC,MAAM;MACLN,KAAK,CAACQ,eAAe,CAACR,KAAK,CAACM,EAAE,CAAC;IACjC;IACAG,WAAW,EAAE;EACf,CAAC;EACD;EACA;EACA;;EAEA,MAAMC,aAAa,GAAGb,MAAM,CAAC,IAAI,CAAC;EAClC,MAAMY,WAAW,GAAG,MAAM;IACxB,IAAIR,eAAe,KAAK,IAAI,EAAE;MAC5BS,aAAa,CAACC,OAAO,CAACC,KAAK,CAACC,KAAK,GAAG,MAAM;IAC5C,CAAC,MAAM;MACLH,aAAa,CAACC,OAAO,CAACC,KAAK,CAACC,KAAK,GAAG,KAAK;IAC3C;EACF,CAAC;;EAED;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAA,wBACE;MAAA,uCAAgBb,KAAK,CAACM,EAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QAAQ,eAChC;MAAA,0CAAmBN,KAAK,CAACc,KAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAAQ,eACtC;MAAQ,OAAO,EAAE,MAAMX,aAAa,EAAG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAa,eACpD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB,eAChB;MAAM,GAAG,EAAEO,aAAc;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAc;EAAA;IAAA;IAAA;IAAA;EAAA,QACnC;EAER;AACF,CAAC;AAAC,GAzCIX,OAAO;AAAA,KAAPA,OAAO;AA2Cb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}